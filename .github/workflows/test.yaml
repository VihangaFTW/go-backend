name: Run unit tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    env:
      DB_SOURCE: ${{ secrets.DB_SOURCE }}
      PASETO_SYMMETRIC_KEY: ${{ secrets.PASETO_SYMMETRIC_KEY }}
      ENVIRONMENT: ${{secrets.ENVIRONMENT}}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: 12345
          POSTGRES_USER: root
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go 1.24.2
        uses: actions/setup-go@v4
        with:
          go-version: ^1.24.4
        id: go

      - name: Setup configuration file
        run: |
          cp app.env.template app.env
          sed -i 's|${DB_SOURCE}|${{ secrets.DB_SOURCE }}|g' app.env
          sed -i 's|${PASETO_SYMMETRIC_KEY}|${{ secrets.PASETO_SYMMETRIC_KEY}}|g' app.env

      - name: Install golang-migrate CLI
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.18.3
          echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Run DB migration
        run: migrate -path db/migration -database "$DB_SOURCE" -verbose up

      - name: Run tests
        run: make test
